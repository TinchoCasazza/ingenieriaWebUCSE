# Generated by Django 2.1.1 on 2018-10-05 21:25

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('idCarrera', models.AutoField(primary_key=True, serialize=False)),
                ('NombreCarrera', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriaUsuario',
            fields=[
                ('idCategoriaU', models.AutoField(primary_key=True, serialize=False)),
                ('NombreCategoriaU', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('idComentario', models.AutoField(primary_key=True, serialize=False)),
                ('ContenidoComentario', models.TextField(null=True)),
                ('FechaComentario', models.DateField(auto_now=True, verbose_name='Date')),
                ('FechaModiComentario', models.DateField(default=None, editable=False, null=True)),
                ('FechaBajaComentario', models.DateField(default=None, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('idGrupo', models.AutoField(primary_key=True, serialize=False)),
                ('NombreGrupo', models.CharField(max_length=50)),
                ('FechaCreacionG', models.DateField(default=datetime.date.today, verbose_name='Fecha Creacion')),
                ('FechaBajaG', models.DateField(default=None, editable=False, null=True)),
                ('FechaModiG', models.DateField(default=None, editable=False, null=True)),
                ('Creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Permisos',
            fields=[
                ('idPermisos', models.AutoField(primary_key=True, serialize=False)),
                ('NombrePerm', models.CharField(max_length=30)),
                ('EditarComentarios', models.BooleanField(default=False)),
                ('EliminarComentarios', models.BooleanField(default=False)),
                ('EditarPublicacion', models.BooleanField(default=False)),
                ('EliminarPublicacion', models.BooleanField(default=False)),
                ('EditarGrupo', models.BooleanField(default=False)),
                ('EliminarGrupo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PrivacidadGrupo',
            fields=[
                ('idPrivacidadG', models.AutoField(primary_key=True, serialize=False)),
                ('Privacidad', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Publicacion',
            fields=[
                ('idPublicacion', models.AutoField(primary_key=True, serialize=False)),
                ('Destacar', models.BooleanField(default=False)),
                ('Publicado', models.BooleanField(default=False, null=True)),
                ('Borrador', models.BooleanField(default=False, null=True)),
                ('Eliminado', models.BooleanField(default=False, null=True)),
                ('Titulo', models.CharField(max_length=30)),
                ('Contenido', models.TextField()),
                ('FechaPublicacion', models.DateField(auto_now=True, verbose_name='Date')),
                ('FechaBajaPublicacion', models.DateField(default=None, editable=False, null=True)),
                ('FechaModiPublicacion', models.DateField(default=None, editable=False, null=True)),
                ('idGrupoPu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='social.Grupo')),
                ('idUserPublico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skin',
            fields=[
                ('idSkin', models.AutoField(primary_key=True, serialize=False)),
                ('nombreSkin', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='UserGrupos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Permisos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.Permisos')),
                ('idGrupoUsuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.Grupo')),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='grupo',
            name='NivelAcceso',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.PrivacidadGrupo'),
        ),
        migrations.AddField(
            model_name='comentario',
            name='idPublicacionC',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.Publicacion'),
        ),
        migrations.AddField(
            model_name='comentario',
            name='idUserComento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='carrera',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='social.Carrera'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='skinUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='social.Skin'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
